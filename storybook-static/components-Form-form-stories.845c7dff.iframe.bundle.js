"use strict";(self.webpackChunkvanilla_react_dkbrownn=self.webpackChunkvanilla_react_dkbrownn||[]).push([[377],{"./src/components/Form/form.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DefaultType:()=>DefaultType,FuncType:()=>FuncType,SelectType:()=>SelectType,__namedExportsOrder:()=>__namedExportsOrder,default:()=>form_stories});var react=__webpack_require__("./node_modules/react/index.js"),dist_web=__webpack_require__("./node_modules/async-validator/dist-web/index.js"),mapValues=__webpack_require__("./node_modules/lodash-es/mapValues.js"),forEach=__webpack_require__("./node_modules/lodash-es/forEach.js");const filedReducer=(state,action)=>{switch(action.type){case"addField":return{...state,[action.name]:{...action.value}};case"updateValue":return{...state,[action.name]:{...state[action.name],value:action.value}};case"updateValidateResult":const{isVaild,errors}=action.value;return{...state,[action.name]:{...state[action.name],isVaild,errors}};default:return state}};var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const formContext=(0,react.createContext)({}),Form=(0,react.forwardRef)(((_ref,ref)=>{let{name="vanilla-form",children,initialValues,onFinish,onFinishFailed}=_ref;const{form,dispatch,fields,...restProps}=(initialValues=>{const[form,setForm]=(0,react.useState)({isVaild:!0,isSubmiting:!1,errors:{}}),[fields,dispatch]=(0,react.useReducer)(filedReducer,{}),getFieldValue=key=>fields[key]&&fields[key].value,transformRules=rules=>rules.map((rule=>"function"==typeof rule?rule({getFieldValue}):rule));return{fields,dispatch,form,validateField:async name=>{const{value,rules}=fields[name],afterRules=transformRules(rules),descroptor={[name]:afterRules},valueMap={[name]:value},validator=new dist_web.A(descroptor);let isVaild=!0,errors=[];console.log(valueMap,descroptor,validator);try{await validator.validate(valueMap)}catch(e){console.log(e),isVaild=!1;const err=e;console.log("e",err.errors),console.log("fields",err.fields),errors=err.errors}finally{console.log("errors",isVaild),dispatch({type:"updateValidateResult",name,value:{isVaild,errors}})}},validateAllField:async()=>{let isVaild=!0,errors={};const valueMap=(0,mapValues.A)(fields,(item=>item.value)),descroptor=(0,mapValues.A)(fields,(item=>transformRules(item.rules))),validator=new dist_web.A(descroptor);console.log(valueMap,descroptor,validator),setForm({...form,isSubmiting:!0});try{await validator.validate(valueMap)}catch(e){console.error(e),isVaild=!1,errors=e.fields,(0,forEach.A)(fields,((value,name)=>{if(errors[name]){const itemErrors=errors[name];dispatch({type:"updateValidateResult",name,value:{isVaild:!1,errors:itemErrors}})}else value.rules.length>0&&!errors[name]&&dispatch({type:"updateValidateResult",name,value:{isVaild:!0,errors:[]}})}))}finally{return setForm({...form,isSubmiting:!1,isVaild,errors}),{isVaild,errors,values:valueMap}}},getFieldValue,getFieldsValue:()=>(0,mapValues.A)(fields,(item=>item.value)),setFieldValue:(name,value)=>{fields[name]&&dispatch({type:"updateValue",name,value})},reset:()=>{(0,forEach.A)(fields,((value,name)=>{null!=initialValues&&initialValues[name]?dispatch({type:"updateValue",name,value:initialValues[name]}):dispatch({type:"updateValue",name,value:null})}))}}})(initialValues),{validateField,validateAllField}=restProps;(0,react.useImperativeHandle)(ref,(()=>({...restProps})));const passContext={dispatch,fields,initialValues,validateField};let childrenNode;return childrenNode="function"==typeof children?children(form):children,(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)("form",{name,className:"vanilla-form",onSubmit:async e=>{e.preventDefault(),e.stopPropagation();const{isVaild,errors,values}=await validateAllField();isVaild&&onFinish?onFinish(values):!isVaild&&onFinishFailed&&onFinishFailed(values,errors)},children:(0,jsx_runtime.jsx)(formContext.Provider,{value:passContext,children:childrenNode})})})}));Form.__docgenInfo={description:"",methods:[],displayName:"Form",props:{name:{required:!1,tsType:{name:"string"},description:"表单名称，会作为表单字段 id 前缀使用",defaultValue:{value:'"vanilla-form"',computed:!1}},initialValues:{required:!1,tsType:{name:"Record",elements:[{name:"string"},{name:"any"}],raw:"Record<string, any>"},description:"表单默认值，只有初始化以及重置时生效"},children:{required:!1,tsType:{name:"union",raw:"ReactNode | RenderProps",elements:[{name:"ReactNode"},{name:"signature",type:"function",raw:"(form: FormState) => React.ReactNode",signature:{arguments:[{type:{name:"FormState"},name:"form"}],return:{name:"ReactReactNode",raw:"React.ReactNode"}}}]},description:""},onFinish:{required:!1,tsType:{name:"signature",type:"function",raw:"(values: Record<string, any>) => void",signature:{arguments:[{type:{name:"Record",elements:[{name:"string"},{name:"any"}],raw:"Record<string, any>"},name:"values"}],return:{name:"void"}}},description:"提交表单且数据验证成功后回调事件"},onFinishFailed:{required:!1,tsType:{name:"signature",type:"function",raw:"(values: Record<string, any>, errors: ValidateError) => void",signature:{arguments:[{type:{name:"Record",elements:[{name:"string"},{name:"any"}],raw:"Record<string, any>"},name:"values"},{type:{name:"ValidateError"},name:"errors"}],return:{name:"void"}}},description:"提交表单且数据验证失败后回调事件"}}};var classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames);const FormItem=_ref=>{let{name,label,children,rules,valuePropName="value",validateTrigger="onBlur",trigger="onChange",getValueFromEvent=e=>e.target.value}=_ref;const rowClasses=classnames_default()("vanilla-row",{"vanilla-row-no-label":!label}),{dispatch,fields,initialValues,validateField}=(0,react.useContext)(formContext);(0,react.useEffect)((()=>{const value=initialValues&&initialValues[name];dispatch({type:"addField",name,value:{label,name,value,rules:rules||[],errors:[],isVaild:!0}})}),[]);const fieldState=fields[name],value=fieldState&&fieldState.value||"",error=fieldState&&fieldState.errors,hasError=error&&error.length>0,isRequired=null==rules?void 0:rules.some((rule=>{if("function"!=typeof rule)return rule.required})),labelClasses=classnames_default()({"vanilla-form-item-required":isRequired}),itemClasses=classnames_default()("vanilla-form-item-control",{"vanilla-form-item-has-error":hasError}),onValueValidate=async()=>{await validateField(name)},controlProps={};controlProps[valuePropName]=value,controlProps[trigger]=e=>{const value=getValueFromEvent(e);console.log("new value",value),dispatch({type:"updateValue",name,value})},rules&&(controlProps[validateTrigger]=onValueValidate);const childrenList=react.Children.toArray(children);0===childrenList.length&&console.error(" NO child element found in formItem, please provide one"),childrenList.length>1&&console.warn("Only support one child element in formItem"),react.isValidElement(childrenList[0])||console.error(" Child component is not a vaild React Element");const child=childrenList[0],returnChildNode=react.cloneElement(child,{...child.props,...controlProps});return(0,jsx_runtime.jsxs)("div",{className:rowClasses,children:[label&&(0,jsx_runtime.jsx)("div",{className:"vanilla-form-item-label",children:(0,jsx_runtime.jsx)("label",{className:labelClasses,title:label,children:label})}),(0,jsx_runtime.jsxs)("div",{className:"vanilla-form-item",children:[(0,jsx_runtime.jsx)("div",{className:itemClasses,children:returnChildNode}),hasError&&(0,jsx_runtime.jsx)("div",{className:"vanilla-form-item-explain",children:error[0].message})]})]})};FormItem.__docgenInfo={description:"",methods:[],displayName:"FormItem",props:{name:{required:!0,tsType:{name:"string"},description:"字段名"},label:{required:!1,tsType:{name:"string"},description:"label 标签的文本"},children:{required:!1,tsType:{name:"ReactNode"},description:""},valuePropName:{required:!1,tsType:{name:"string"},description:"子节点的值的属性，如 checkbox 的是 'checked'",defaultValue:{value:'"value"',computed:!1}},trigger:{required:!1,tsType:{name:"string"},description:"设置收集字段值变更的时机",defaultValue:{value:'"onChange"',computed:!1}},rules:{required:!1,tsType:{name:"Array",elements:[{name:"union",raw:"CustomRuleFunc | RuleItem",elements:[{name:"signature",type:"function",raw:"({ getFieldValue }: any) => RuleItem",signature:{arguments:[{type:{name:"any"},name:""}],return:{name:"RuleItem"}}},{name:"RuleItem"}]}],raw:"CustomRule[]"},description:"校验规则"},getValueFromEvent:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: any) => any",signature:{arguments:[{type:{name:"any"},name:"event"}],return:{name:"any"}}},description:"设置如何将 event 的值转换成字段值",defaultValue:{value:"(e) => e.target.value",computed:!1}},validateTrigger:{required:!1,tsType:{name:"string"},description:"设置字段校验的时机",defaultValue:{value:'"onBlur"',computed:!1}}}};var input=__webpack_require__("./src/components/Input/input.tsx"),Button_button=__webpack_require__("./src/components/Button/button.tsx"),Select_select=__webpack_require__("./src/components/Select/select.tsx"),Select_option=__webpack_require__("./src/components/Select/option.tsx");const form_stories={title:"Form组件",component:Form,subcomponents:{FormItem},decorators:[Story=>(0,jsx_runtime.jsx)("div",{style:{width:"550px"},children:(0,jsx_runtime.jsx)(Story,{})})]},confirmRules=[{type:"string",required:!0,min:3,max:8},_ref=>{let{getFieldValue}=_ref;return{asyncValidator:(rule,value)=>(console.log("the value",getFieldValue("password")),new Promise(((resolve,reject)=>{value!==getFieldValue("password")&&(console.log(value,getFieldValue("password")),reject("The two passwords that you entered do not match")),setTimeout((()=>{resolve()}),500)})))}}],DefaultType=()=>(0,jsx_runtime.jsxs)(Form,{initialValues:{user:"vanilla",agreement:!1},children:[(0,jsx_runtime.jsx)(FormItem,{label:"email",name:"email",rules:[{type:"email",required:!0}],children:(0,jsx_runtime.jsx)(input.p,{})}),(0,jsx_runtime.jsx)(FormItem,{label:"password",name:"password",rules:[{type:"string",required:!0,min:3,max:8}],children:(0,jsx_runtime.jsx)(input.p,{type:"password"})}),(0,jsx_runtime.jsx)(FormItem,{label:"confirm",name:"confirmPassword",rules:confirmRules,children:(0,jsx_runtime.jsx)(input.p,{type:"password"})}),(0,jsx_runtime.jsx)("div",{className:"vanilla-form-submit-area",children:(0,jsx_runtime.jsx)(Button_button.$,{type:"submit",btnType:"primary",children:"登陆"})})]});DefaultType.storyName="默认的样式的Form";const SelectType=()=>(0,jsx_runtime.jsxs)(Form,{initialValues:{user:"vanilla",agreement:!1},children:[(0,jsx_runtime.jsx)(FormItem,{label:"username",name:"username",rules:[{type:"string",required:!0}],children:(0,jsx_runtime.jsx)(input.p,{})}),(0,jsx_runtime.jsx)(FormItem,{label:"password",name:"password",rules:[{type:"string",required:!0,min:3,max:8}],children:(0,jsx_runtime.jsx)(input.p,{type:"password"})}),(0,jsx_runtime.jsx)(FormItem,{label:"confirm",name:"confirmPassword",rules:confirmRules,children:(0,jsx_runtime.jsx)(input.p,{type:"password"})}),(0,jsx_runtime.jsx)(FormItem,{label:"性别",name:"gender",rules:[{type:"string",required:!0}],getValueFromEvent:e=>e,valuePropName:"defaultValue",children:(0,jsx_runtime.jsxs)(Select_select.l,{placeholder:"请选择性别",children:[(0,jsx_runtime.jsx)(Select_option.c,{value:"男"}),(0,jsx_runtime.jsx)(Select_option.c,{value:"女"})]})}),(0,jsx_runtime.jsx)("div",{className:"vanilla-form-submit-area",children:(0,jsx_runtime.jsx)(Button_button.$,{type:"submit",btnType:"primary",children:"登陆"})})]});SelectType.storyName="支持多种item的Form";const FuncType=()=>{const ref=(0,react.useRef)(null),resetAll=()=>{var _ref$current,_ref$current2;console.log(null===(_ref$current=ref.current)||void 0===_ref$current?void 0:_ref$current.getFieldValue("user")),console.log(null===(_ref$current2=ref.current)||void 0===_ref$current2?void 0:_ref$current2.reset())};return(0,jsx_runtime.jsx)(Form,{initialValues:{user:"vanilla",agreement:!1},ref,children:_ref2=>{let{isVaild,isSubmiting}=_ref2;return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(FormItem,{label:"user",name:"user",rules:[{type:"email",required:!0}],children:(0,jsx_runtime.jsx)(input.p,{})}),(0,jsx_runtime.jsx)(FormItem,{label:"password",name:"password",rules:[{type:"string",required:!0,min:3,max:8}],children:(0,jsx_runtime.jsx)(input.p,{type:"password"})}),(0,jsx_runtime.jsx)(FormItem,{label:"confirm",name:"confirmPassword",rules:confirmRules,children:(0,jsx_runtime.jsx)(input.p,{type:"password"})}),(0,jsx_runtime.jsxs)("div",{className:"agreement-section",style:{display:"flex",justifyContent:"center"},children:[(0,jsx_runtime.jsx)(FormItem,{name:"agreement",valuePropName:"checked",getValueFromEvent:e=>e.target.checked,rules:[{type:"enum",enum:[!0],message:"请同意协议"}],children:(0,jsx_runtime.jsx)("input",{type:"checkbox"})}),(0,jsx_runtime.jsxs)("span",{className:"agree-text",children:["注册即代表同意",(0,jsx_runtime.jsx)("a",{href:"#",children:"用户协议"})]})]}),(0,jsx_runtime.jsxs)("div",{className:"vanilla-form-submit-area",children:[(0,jsx_runtime.jsxs)(Button_button.$,{type:"submit",btnType:"primary",children:["登陆",isSubmiting?"验证中":"验证完毕"," ",isVaild?"通过😄":"没通过😢"]}),(0,jsx_runtime.jsx)(Button_button.$,{type:"button",btnType:"primary",onClick:resetAll,children:"重置"})]})]})}})};FuncType.storyName="支持调用表单实例的Form";const __namedExportsOrder=["DefaultType","SelectType","FuncType"];DefaultType.parameters={...DefaultType.parameters,docs:{...DefaultType.parameters?.docs,source:{originalSource:'() => {\n  return <Form initialValues={{\n    user: "vanilla",\n    agreement: false\n  }}>\r\n    <FormItem label="email" name="email" rules={[{\n      type: "email",\n      required: true\n    }]}>\r\n      <Input />\r\n    </FormItem>\r\n    <FormItem label="password" name="password" rules={[{\n      type: "string",\n      required: true,\n      min: 3,\n      max: 8\n    }]}>\r\n      <Input type="password" />\r\n    </FormItem>\r\n    <FormItem label="confirm" name="confirmPassword" rules={confirmRules}>\r\n      <Input type="password" />\r\n    </FormItem>\r\n    <div className="vanilla-form-submit-area">\r\n      <Button type="submit" btnType="primary">登陆</Button>\r\n    </div>\r\n  </Form>;\n}',...DefaultType.parameters?.docs?.source}}},SelectType.parameters={...SelectType.parameters,docs:{...SelectType.parameters?.docs,source:{originalSource:'() => {\n  return <Form initialValues={{\n    user: "vanilla",\n    agreement: false\n  }}>\r\n    <FormItem label="username" name="username" rules={[{\n      type: "string",\n      required: true\n    }]}>\r\n      <Input />\r\n    </FormItem>\r\n    <FormItem label="password" name="password" rules={[{\n      type: "string",\n      required: true,\n      min: 3,\n      max: 8\n    }]}>\r\n      <Input type="password" />\r\n    </FormItem>\r\n    <FormItem label="confirm" name="confirmPassword" rules={confirmRules}>\r\n      <Input type="password" />\r\n    </FormItem>\r\n     <FormItem label="性别" name="gender" rules={[{\n      type: \'string\',\n      required: true\n    }]} getValueFromEvent={e => e} valuePropName=\'defaultValue\'>\r\n      <Select placeholder="请选择性别">\r\n      <Option value="男" />\r\n      <Option value="女" />\r\n     </Select>\r\n     </FormItem>\r\n    <div className="vanilla-form-submit-area">\r\n      <Button type="submit" btnType="primary">登陆</Button>\r\n    </div>\r\n  </Form>;\n}',...SelectType.parameters?.docs?.source}}},FuncType.parameters={...FuncType.parameters,docs:{...FuncType.parameters?.docs,source:{originalSource:'() => {\n  const ref = useRef<IFormRef>(null);\n  const resetAll = () => {\n    console.log(ref.current?.getFieldValue("user"));\n    console.log(ref.current?.reset());\n  };\n  return <Form initialValues={{\n    user: "vanilla",\n    agreement: false\n  }} ref={ref}>\r\n    {({\n      isVaild,\n      isSubmiting\n    }) => <>\r\n          <FormItem label="user" name="user" rules={[{\n        type: "email",\n        required: true\n      }]}>\r\n            <Input />\r\n          </FormItem>\r\n          <FormItem label="password" name="password" rules={[{\n        type: "string",\n        required: true,\n        min: 3,\n        max: 8\n      }]}>\r\n            <Input type="password" />\r\n          </FormItem>\r\n          <FormItem label="confirm" name="confirmPassword" rules={confirmRules}>\r\n            <Input type="password" />\r\n          </FormItem>\r\n          <div className=\'agreement-section\' style={{\n        \'display\': \'flex\',\n        \'justifyContent\': \'center\'\n      }}>\r\n            <FormItem name="agreement" valuePropName="checked" getValueFromEvent={e => e.target.checked} rules={[{\n          type: \'enum\',\n          enum: [true],\n          message: \'请同意协议\'\n        }]}>\r\n              <input type="checkbox" />\r\n            </FormItem>\r\n            <span className="agree-text">注册即代表同意<a href="#">用户协议</a></span>\r\n          </div>\r\n          <div className="vanilla-form-submit-area">\r\n            <Button type="submit" btnType="primary">登陆\r\n              {isSubmiting ? \'验证中\' : \'验证完毕\'} {isVaild ? \'通过😄\' : \'没通过😢\'}\r\n            </Button>\r\n            <Button type="button" btnType="primary" onClick={resetAll}>重置</Button>\r\n          </div>\r\n        </>}\r\n  </Form>;\n}',...FuncType.parameters?.docs?.source}}}},"./src/Hooks/useClickOutside.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{L:()=>useClickOutside});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const useClickOutside=(ref,handler)=>{(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{const listener=event=>{var _ref$current;console.log(ref.current,event.target,null===(_ref$current=ref.current)||void 0===_ref$current?void 0:_ref$current.contains(event.target));const ele=event.target;!ref.current||ref.current.contains(ele)||ele.closest(".icon-check")||handler(event)};return document.addEventListener("click",listener),()=>{document.removeEventListener("click",listener)}}),[ref,handler])}},"./src/components/Button/button.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$:()=>Button});__webpack_require__("./node_modules/react/index.js");var classnames__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const Button=_ref=>{let{btnType="default",disabled=!1,size,children,href,className,...restProps}=_ref;const classes=classnames__WEBPACK_IMPORTED_MODULE_1___default()("vanilla-btn",className,{[`vanilla-btn-${btnType}`]:btnType,[`vanilla-btn-${size}`]:size,disabled:"link"===btnType&&disabled});return"link"===btnType&&href?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("a",{className:classes,href,...restProps,children}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("button",{className:classes,disabled,...restProps,children})};Button.__docgenInfo={description:'页面中最常用的的按钮元素，适合于完成特定的交互，支持 HTML button 和 a 链接 的所有属性\r\n##引用方法\r\n~~~js\r\nimport { Button } from "vanilla-react"\r\n~~~',methods:[],displayName:"Button",props:{className:{required:!1,tsType:{name:"string"},description:"可以扩展的类名"},disabled:{required:!1,tsType:{name:"boolean"},description:"是否禁用",defaultValue:{value:"false",computed:!1}},size:{required:!1,tsType:{name:"union",raw:"'lg' | 'sm'",elements:[{name:"literal",value:"'lg'"},{name:"literal",value:"'sm'"}]},description:"Button 的尺寸"},btnType:{required:!1,tsType:{name:"union",raw:"'primary' | 'default' | 'danger' | 'link'",elements:[{name:"literal",value:"'primary'"},{name:"literal",value:"'default'"},{name:"literal",value:"'danger'"},{name:"literal",value:"'link'"}]},description:"按钮类型，共有四种分别为 'primary' | 'default' | 'danger' | 'link'",defaultValue:{value:'"default"',computed:!1}},children:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},href:{required:!1,tsType:{name:"string"},description:"当按钮类型为link时，跳转的链接"}},composes:["BaseButtonProps"]}},"./src/components/Icon/icon.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{I:()=>Icon});__webpack_require__("./node_modules/react/index.js");var classnames__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__),_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@fortawesome/react-fontawesome/index.es.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/jsx-runtime.js");const Icon=_ref=>{let{theme,className,...restProps}=_ref;const classes=classnames__WEBPACK_IMPORTED_MODULE_1___default()("vanilla-icon",className,{[`vanilla-icon-${theme}`]:theme});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_2__.g,{className:classes,...restProps})};Icon.__docgenInfo={description:'提供了一套常用的图标集合 基y于react-fontawesome。\r\n\r\n支持 react-fontawesome的所有属性 可以在这里查询 https://github.com/FortAwesome/react-fontawesome#basic\r\n\r\n支持 fontawesome 所有 free-solid-icons，可以在这里查看所有图标 https://fontawesome.com/icons?d=gallery&s=solid&m=free\r\n\r\n##引用方法\r\n~~~js\r\nimport { Icon } from "vanilla-react"\r\n~~~',methods:[],displayName:"Icon",props:{theme:{required:!1,tsType:{name:"union",raw:"'primary' | 'secondary' | 'success' | 'info' | 'warning' | 'danger' | 'light' | 'dark'",elements:[{name:"literal",value:"'primary'"},{name:"literal",value:"'secondary'"},{name:"literal",value:"'success'"},{name:"literal",value:"'info'"},{name:"literal",value:"'warning'"},{name:"literal",value:"'danger'"},{name:"literal",value:"'light'"},{name:"literal",value:"'dark'"}]},description:"图标主题色"},size:{required:!1,tsType:{name:"SizeProp"},description:"图标尺寸"},icon:{required:!0,tsType:{name:"IconProp"},description:"图标类型"}},composes:["FontAwesomeIconProps"]}},"./src/components/Input/input.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{p:()=>Input});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__),_Icon_icon__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/Icon/icon.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/jsx-runtime.js");const Input=(0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(((_ref,ref)=>{let{size,icon,prepend,append,disabled=!1,style,...restProps}=_ref;const classes=classnames__WEBPACK_IMPORTED_MODULE_1___default()("vanilla-input-wrapper",{"is-disabled":disabled,[`input-size-${size}`]:size,"input-group":prepend||append,"input-group-append":!!append,"input-group-prepend":!!prepend});var value;return"value"in restProps&&(delete restProps.defaultValue,restProps.value=null==(value=restProps.value)?"":value),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{className:classes,style,"data-testid":"test-wrapper",children:[prepend&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:"vanilla-input-group-prepend","data-testid":"test-prepend",children:prepend}),icon&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:"icon-wrapper","data-testid":"test-icon",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_Icon_icon__WEBPACK_IMPORTED_MODULE_2__.I,{icon,title:`title-${icon}`})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("input",{ref,className:"vanilla-input-inner",...restProps,disabled,"data-testid":"test-input"}),append&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{className:"vanilla-input-group-append","data-testid":"test-append",children:append})]})}));Input.__docgenInfo={description:"",methods:[],displayName:"Input",props:{size:{required:!1,tsType:{name:"union",raw:'"lg" | "medium" | "sm"',elements:[{name:"literal",value:'"lg"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"sm"'}]},description:"输入框的尺寸"},icon:{required:!1,tsType:{name:"IconProp"},description:"输入框支持的icon"},disabled:{required:!1,tsType:{name:"boolean"},description:"是否禁用输入框",defaultValue:{value:"false",computed:!1}},prepend:{required:!1,tsType:{name:"union",raw:"string | ReactElement",elements:[{name:"string"},{name:"ReactElement"}]},description:"输入框前缀"},append:{required:!1,tsType:{name:"union",raw:"string | ReactElement",elements:[{name:"string"},{name:"ReactElement"}]},description:"输入框后缀"},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: ChangeEvent<HTMLInputElement>) => void",signature:{arguments:[{type:{name:"ChangeEvent",elements:[{name:"HTMLInputElement"}],raw:"ChangeEvent<HTMLInputElement>"},name:"e"}],return:{name:"void"}}},description:""}},composes:["Omit"]}},"./src/components/Select/option.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{c:()=>Option});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__),_Icon_icon__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/Icon/icon.tsx"),_select__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/Select/select.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/react/jsx-runtime.js");const Option=_ref=>{let{index,value,label,disabled,children}=_ref;const{onSelect,selectedValues,multiple}=(0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_select__WEBPACK_IMPORTED_MODULE_3__.C),isSelected=selectedValues.includes(value),classes=classnames__WEBPACK_IMPORTED_MODULE_1___default()("vanilla-select-option",{"is-disabled":disabled,"is-selected":isSelected});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("li",{className:classes,onClick:e=>((e,value,isSelected)=>{e.preventDefault(),onSelect&&!disabled&&onSelect(value,isSelected)})(e,value,isSelected),children:[children||label||value,!disabled&&multiple&&isSelected&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_Icon_icon__WEBPACK_IMPORTED_MODULE_2__.I,{icon:"check",className:"icon-check"})]},index)};Option.displayName="Option",Option.__docgenInfo={description:"",methods:[],displayName:"Option",props:{index:{required:!1,tsType:{name:"string"},description:""},value:{required:!0,tsType:{name:"string"},description:"默认根据此属性值进行筛选，该值不能相同"},label:{required:!1,tsType:{name:"string"},description:"选项的标签，若不设置则默认与 value 相同"},disabled:{required:!1,tsType:{name:"boolean"},description:"是否禁用该选项"},children:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""}}}},"./src/components/Select/select.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{C:()=>SelectContext,l:()=>Select});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__),_Input_input__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/Input/input.tsx"),_Hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/Hooks/useClickOutside.ts"),_Transition_transition__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/Transition/transition.tsx"),_Icon_icon__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/Icon/icon.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/react/jsx-runtime.js");const SelectContext=(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({selectedValues:[]}),Select=_ref=>{let{defaultValue,placeholder,disabled,multiple,name,isShow=!1,onChange,onVisibleChange,children}=_ref;const containerRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),input=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),[menuOpen,setMenuOpen]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("string"==typeof defaultValue?defaultValue:""),[selectedValues,setSelectedValues]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(Array.isArray(defaultValue)?defaultValue:[]);(0,_Hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_3__.L)(containerRef,(()=>{setMenuOpen(!1),onVisibleChange&&menuOpen&&onVisibleChange(!1)}));const handleOptionClick=(value,isSelected)=>{multiple?setValue(""):(setMenuOpen(!1),setValue(value),onVisibleChange&&onVisibleChange(!1));let updatedValues=[value];multiple&&(updatedValues=isSelected?selectedValues.filter((v=>v!==value)):[...selectedValues,value],setSelectedValues(updatedValues)),onChange&&onChange(value,updatedValues)};(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{console.log("111",input.current),input.current&&(input.current.focus(),multiple&&selectedValues.length>0?input.current.placeholder="":placeholder&&(input.current.placeholder=placeholder))}),[selectedValues,multiple,placeholder]);const wrapperClasses=classnames__WEBPACK_IMPORTED_MODULE_1___default()("vanilla-select",{"menu-is-open":menuOpen,"is-disabled":disabled,"is-multiple":multiple}),passedContext={onSelect:handleOptionClick,selectedValues:multiple?selectedValues:value,multiple};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)("div",{className:wrapperClasses,ref:containerRef,children:[isShow&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)("div",{className:"show-wrapper",style:{padding:".5rem"},children:["当前值：",multiple?selectedValues.map(((value,index)=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)("span",{children:value},index))):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)("span",{children:value})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)("div",{className:"vanilla-select-input",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_Input_input__WEBPACK_IMPORTED_MODULE_2__.p,{ref:input,disabled,placeholder,readOnly:!0,value,name,icon:"angle-down",onClick:e=>{e.preventDefault(),disabled||(setMenuOpen(!0),onVisibleChange&&onVisibleChange(!menuOpen))}}),multiple&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)("div",{className:"vanilla-selected-tags",children:selectedValues.map(((item,index)=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxs)("span",{className:"vanilla-tag",children:[item,(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_Icon_icon__WEBPACK_IMPORTED_MODULE_5__.I,{icon:"times",onClick:()=>handleOptionClick(item,!0)})]},`tag-${index}`)))})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(SelectContext.Provider,{value:passedContext,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)(_Transition_transition__WEBPACK_IMPORTED_MODULE_4__.e,{in:menuOpen,timeout:300,animation:"zoom-in-top",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_6__.jsx)("ul",{className:"vanilla-select-dropdown",children:(()=>{const NodeList={};return react__WEBPACK_IMPORTED_MODULE_0__.Children.map(children,((child,index)=>{const childElement=child,value=childElement.props.value;if("Option"===childElement.type.displayName)return NodeList[value]?(console.error("Warning: Options can not have a equal value"),react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(childElement,{index:`select-${index}`,disabled:!0})):(NodeList[value]=value,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(childElement,{index:`select-${index}`}));console.error("Warning: Select has a child which is not a Option component")}))})()})})})]})};Select.__docgenInfo={description:"下拉选择器。\r\n弹出一个下拉菜单给用户选择操作，用于代替原生的选择器，或者需要一个更优雅的多选器时。\r\n### 引用方法\r\n\r\n~~~js\r\nimport { Select } from 'vanilla-react'\r\n// 然后可以使用 <Select> 和 <Select.Option>\r\n~~~",methods:[],displayName:"Select",props:{defaultValue:{required:!1,tsType:{name:"union",raw:"string | string[]",elements:[{name:"string"},{name:"Array",elements:[{name:"string"}],raw:"string[]"}]},description:"指定默认选中的条目\t 可以是是字符串或者字符串数组"},placeholder:{required:!1,tsType:{name:"string"},description:"选择框默认文字"},disabled:{required:!1,tsType:{name:"boolean"},description:"是否禁用"},multiple:{required:!1,tsType:{name:"boolean"},description:"是否支持多选"},name:{required:!1,tsType:{name:"string"},description:"select input 的 name 属性"},isShow:{required:!1,tsType:{name:"boolean"},description:"是否展示当前值",defaultValue:{value:"false",computed:!1}},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(selectedValue: string, selectedValues: string[]) => void",signature:{arguments:[{type:{name:"string"},name:"selectedValue"},{type:{name:"Array",elements:[{name:"string"}],raw:"string[]"},name:"selectedValues"}],return:{name:"void"}}},description:"选中值发生变化时触发"},onVisibleChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(visible: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"visible"}],return:{name:"void"}}},description:"下拉框出现/隐藏时触发"},children:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""}}}},"./src/components/Transition/transition.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{e:()=>Transition});__webpack_require__("./node_modules/react/index.js");var react_transition_group__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react-transition-group/esm/CSSTransition.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const Transition=_ref=>{let{children,classNames,animation,appear=!0,wrapper,unmountOnExit=!0,...restProps}=_ref;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(react_transition_group__WEBPACK_IMPORTED_MODULE_2__.A,{classNames:classNames||animation,appear:!0,unmountOnExit:!0,...restProps,children:wrapper?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{children}):children})};Transition.__docgenInfo={description:"",methods:[],displayName:"Transition",props:{animation:{required:!1,tsType:{name:"union",raw:"'zoom-in-top' | 'zoom-in-left' | 'zoom-in-bottom' | 'zoom-in-right'",elements:[{name:"literal",value:"'zoom-in-top'"},{name:"literal",value:"'zoom-in-left'"},{name:"literal",value:"'zoom-in-bottom'"},{name:"literal",value:"'zoom-in-right'"}]},description:""},children:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},wrapper:{required:!1,tsType:{name:"boolean"},description:""},appear:{defaultValue:{value:"true",computed:!1},required:!1},unmountOnExit:{defaultValue:{value:"true",computed:!1},required:!1}}}}}]);